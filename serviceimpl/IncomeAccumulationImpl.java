package cashflowcalculations.serviceimpl;import java.util.HashMap;import java.util.Map;import java.util.Scanner;import cashflowcalculations.YearlyCashFlow;import cashflowcalculations.model.CashFlow;import cashflowcalculations.model.Revenue;import cashflowcalculations.service.IncomeAccumulation;public class IncomeAccumulationImpl implements IncomeAccumulation {	Map<String, Double> incomeMap = new HashMap<>();	YearlyCashFlow yearlyCashFlow = new YearlyCashFlow();	private final String type = "Income";	@Override	public double findTotalIncome() {		CashFlow cashFlow = new Revenue();		String optionSelected;		cashFlow.setCategory(yearlyCashFlow.getCategory(type));		getIncomeAmount(cashFlow);		incomeMap.put(cashFlow.getCategory(), cashFlow.getAmount());		optionSelected = yearlyCashFlow.getOptionSelected(type);		if (optionSelected.equals("1")) {			findTotalIncome();		} else {			System.out.println("\n");		}		return getIncomeAmount(incomeMap);	}	private double getIncomeAmount(CashFlow cashFlow) {		cashFlow.setAmount(yearlyCashFlow.getAmount((cashFlow.getCategory()), type));		return cashFlow.getAmount();	}	public double getIncomeAmount(Map<String, Double> incomeMap) {		double finalIncomeAmount = 0;		for (Map.Entry<String, Double> map : incomeMap.entrySet()) {			finalIncomeAmount += map.getValue();		}		return finalIncomeAmount;	}}